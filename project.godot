; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "Node",
"class": "ActionState",
"language": "GDScript",
"path": "res://ActionState.gd"
}, {
"base": "Spatial",
"class": "Fly",
"language": "GDScript",
"path": "res://Fly.gd"
}, {
"base": "Position3D",
"class": "FlySpawner",
"language": "GDScript",
"path": "res://FlySpawn.gd"
}, {
"base": "KinematicBody",
"class": "FrogPlayer",
"language": "GDScript",
"path": "res://Player.gd"
}, {
"base": "Node",
"class": "LevelData",
"language": "GDScript",
"path": "res://LevelData.gd"
}, {
"base": "Node",
"class": "NetworkObject",
"language": "GDScript",
"path": "res://NetworkObject.gd"
}, {
"base": "Spatial",
"class": "OnFloorDetector",
"language": "GDScript",
"path": "res://OnFloorDetector.gd"
}, {
"base": "Node",
"class": "State",
"language": "GDScript",
"path": "res://State.gd"
}, {
"base": "Node",
"class": "StateMachine",
"language": "GDScript",
"path": "res://PlayerStateMachine.gd"
}, {
"base": "Spatial",
"class": "TongueHelper",
"language": "GDScript",
"path": "res://TongueHelper.gd"
}, {
"base": "Node",
"class": "Wobbler",
"language": "GDScript",
"path": "res://Wobbler.gd"
} ]
_global_script_class_icons={
"ActionState": "",
"Fly": "",
"FlySpawner": "",
"FrogPlayer": "",
"LevelData": "",
"NetworkObject": "",
"OnFloorDetector": "",
"State": "",
"StateMachine": "",
"TongueHelper": "",
"Wobbler": ""
}

[application]

config/name="Dialing Back"
run/main_scene="res://TitleScreen.tscn"
config/icon="res://icon.png"

[autoload]

DebugDraw="*res://addons/zylann.debug_draw/debug_draw.gd"
Helpers="*res://Singletons/Helpers.gd"
Strings="*res://Singletons/Strings.gd"
PlayerList="*res://Singletons/PlayerList.gd"
Ints="*res://Singletons/Ints.gd"

[input]

forward={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":87,"unicode":0,"echo":false,"script":null)
 ]
}
backward={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":83,"unicode":0,"echo":false,"script":null)
 ]
}
left={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":65,"unicode":0,"echo":false,"script":null)
 ]
}
right={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":68,"unicode":0,"echo":false,"script":null)
 ]
}
jump={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":32,"unicode":0,"echo":false,"script":null)
 ]
}
aim={
"deadzone": 0.5,
"events": [ Object(InputEventMouseButton,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"button_mask":0,"position":Vector2( 0, 0 ),"global_position":Vector2( 0, 0 ),"factor":1.0,"button_index":2,"pressed":false,"doubleclick":false,"script":null)
 ]
}
fire={
"deadzone": 0.5,
"events": [ Object(InputEventMouseButton,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"button_mask":0,"position":Vector2( 0, 0 ),"global_position":Vector2( 0, 0 ),"factor":1.0,"button_index":1,"pressed":false,"doubleclick":false,"script":null)
 ]
}

[physics]

common/enable_pause_aware_picking=true

[rendering]

environment/default_environment="res://default_env.tres"
